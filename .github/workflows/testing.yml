name: PyShell Test Suite

on: [push, pull_request, workflow_dispatch]

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./.devcontainer/gh-actions.dockerfile
        push: false
        tags: pyshell:latest

    - name: Start docker container
      run: >
        docker run --rm -itd --name pyshell -v "$GITHUB_WORKSPACE:/repo"
        --env DEV_CONTAINER=1
        --env PYTHONPATH="/repo/source"
        -v /var/run/docker.sock:/var/run/docker.sock
        -v /usr/bin/docker:/usr/bin/docker
        pyshell:latest

    - name: Run unit tests
      run: >
        docker exec -w "/repo" pyshell
        pytest --cov=pyshell --cov-branch --cov-report=xml tests/unit

    - name: Run integration tests
      run: >
        docker exec -w "/repo" pyshell
        pytest --cov=pyshell --cov-branch --cov-report=xml --cov-append
        tests/integration

    - name: Dump code coverage
      if: success()
      run: >
        docker exec -w "/repo" pyshell
        coverage report --show-missing

    - name: Record code coverage
      if: success()
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both
        thresholds: '75 90'

    - name: Set code coverage env variables
      if: success()
      run: |
        cd "$GITHUB_WORKSPACE"
        METHOD_COVERAGE=$(awk '/Summary/ { gsub("[^0-9]", "", $3); print $3 }' code-coverage-results.md)
        BRANCH_COVERAGE=$(awk '/Summary/ { gsub("[^0-9]", "", $8); print $8 }' code-coverage-results.md)
        echo "METHOD_COVERAGE=$METHOD_COVERAGE" >> $GITHUB_ENV
        echo "BRANCH_COVERAGE=$BRANCH_COVERAGE" >> $GITHUB_ENV

    - name: Update method code coverage badge
      if: success() && github.ref == 'refs/heads/master'
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: 29c386f849ca52d82bb08efd079c0f3b
        filename: pyshell-method-coverage.json
        label: Method Coverage
        message: ${{ env.METHOD_COVERAGE }}%
        valColorRange: ${{ env.METHOD_COVERAGE }}
        maxColorRange: 90
        minColorRange: 0

    - name: Update branch code coverage badge
      if: success() && github.ref == 'refs/heads/master'
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: c850384bbaffa643255fe490b03f4924
        filename: pyshell-branch-coverage.json
        label: Branch Coverage
        message: ${{ env.BRANCH_COVERAGE }}%
        valColorRange: ${{ env.BRANCH_COVERAGE }}
        maxColorRange: 90
        minColorRange: 0

    - name: Stop docker container
      run: docker stop pyshell
